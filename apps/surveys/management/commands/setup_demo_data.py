from django.core.management.base import BaseCommand
from django.core.management import call_command
from django.db import transaction


class Command(BaseCommand):
    help = '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –æ–ø—Ä–æ—Å–∞–º–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--users-count',
            type=int,
            default=15,
            help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 15)',
        )
        parser.add_argument(
            '--clear-all',
            action='store_true',
            help='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö',
        )
        parser.add_argument(
            '--skip-users',
            action='store_true',
            help='–ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å—ã',
        )
        parser.add_argument(
            '--skip-surveys',
            action='store_true',
            help='–ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–ø—Ä–æ—Å—ã, —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        )

    def handle(self, *args, **options):
        users_count = options['users_count']
        clear_all = options['clear_all']
        skip_users = options['skip_users']
        skip_surveys = options['skip_surveys']

        self.stdout.write(
            self.style.SUCCESS('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ä–æ—Å–æ–≤')
        )
        self.stdout.write('=' * 60)

        try:
            with transaction.atomic():
                # –°–æ–∑–¥–∞–µ–º –æ–ø—Ä–æ—Å—ã
                if not skip_surveys:
                    self.stdout.write('\nüìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–ø—Ä–æ—Å–æ–≤...')
                    call_command(
                        'create_test_surveys',
                        survey_type='all',
                        clear=clear_all,
                        verbosity=0
                    )
                    self.stdout.write(
                        self.style.SUCCESS('‚úÖ –û–ø—Ä–æ—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
                    )

                # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                if not skip_users:
                    self.stdout.write('\nüë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
                    call_command(
                        'create_test_users',
                        count=users_count,
                        with_moderator=True,
                        clear=clear_all,
                        verbosity=0
                    )
                    self.stdout.write(
                        self.style.SUCCESS('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
                    )

                self.stdout.write('\n' + '=' * 60)
                self.stdout.write(
                    self.style.SUCCESS('üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!')
                )
                
                self.display_usage_info()

        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: {e}')
            )
            raise

    def display_usage_info(self):
        """–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É."""
        self.stdout.write('\nüìñ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É:')
        self.stdout.write('-' * 30)
        
        self.stdout.write('\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:')
        self.stdout.write('‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: +998901000000 / moderator123')
        self.stdout.write('‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: +99890100XXXX / user123')
        self.stdout.write('  (–≥–¥–µ XXXX –æ—Ç 1000 –¥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)')

        self.stdout.write('\nüåê API Endpoints:')
        self.stdout.write('‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ OTP: POST /api/auth/send-otp/')
        self.stdout.write('‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: POST /api/auth/login/')
        self.stdout.write('‚Ä¢ –°–ø–∏—Å–æ–∫ –æ–ø—Ä–æ—Å–æ–≤: GET /api/surveys/')
        self.stdout.write('‚Ä¢ –ó–∞–ø—É—Å–∫ –æ–ø—Ä–æ—Å–∞: POST /api/surveys/{id}/start/')
        
        self.stdout.write('\nüë®‚Äçüíº –ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:')
        self.stdout.write('‚Ä¢ Dashboard: GET /api/moderator/dashboard/')
        self.stdout.write('‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: GET /api/moderator/users/')
        self.stdout.write('‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: GET /api/moderator/surveys/')

        self.stdout.write('\nüê≥ Docker –∫–æ–º–∞–Ω–¥—ã:')
        self.stdout.write('‚Ä¢ –ó–∞–ø—É—Å–∫: docker-compose -f docker-compose.local.yml up -d')
        self.stdout.write('‚Ä¢ –õ–æ–≥–∏: docker-compose -f docker-compose.local.yml logs django')
        self.stdout.write('‚Ä¢ Shell: docker-compose -f docker-compose.local.yml exec django python manage.py shell')

        self.stdout.write('\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:')
        self.stdout.write('‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ http://localhost:8000')
        self.stdout.write('‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/api/')
        self.stdout.write('‚Ä¢ –ê–¥–º–∏–Ω–∫–∞: http://localhost:8000/admin/')

        self.stdout.write('\nüéØ –°–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å—ã:')
        self.stdout.write('‚Ä¢ "–¢–µ—Å—Ç –ø–æ –æ—Å–Ω–æ–≤–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è" - 5 –≤–æ–ø—Ä–æ—Å–æ–≤')
        self.stdout.write('‚Ä¢ "–¢–µ—Å—Ç –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ" - 4 –≤–æ–ø—Ä–æ—Å–∞') 
        self.stdout.write('‚Ä¢ "–û–±—â–∏–µ –∑–Ω–∞–Ω–∏—è" - 4 –≤–æ–ø—Ä–æ—Å–∞')

        self.stdout.write('\nüí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')
        self.stdout.write('‚Ä¢ –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: python manage.py create_test_users --count 20')
        self.stdout.write('‚Ä¢ –¢–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å—ã: python manage.py create_test_surveys --survey-type programming')
        self.stdout.write('‚Ä¢ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë: python manage.py setup_demo_data --clear-all')

        self.stdout.write('\n' + '=' * 60)
        self.stdout.write(
            self.style.WARNING('‚ö†Ô∏è  –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ! –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.')
        )
