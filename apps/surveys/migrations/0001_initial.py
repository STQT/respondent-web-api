# Generated by Django 5.1.11 on 2025-08-29 09:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('single', 'Single Choice'), ('multiple', 'Multiple Choice'), ('open', 'Open Answer')], max_length=10, verbose_name='Question Type')),
                ('text_uz', models.TextField(verbose_name='Question Text (Uzbek Latin)')),
                ('text_uz_cyrl', models.TextField(blank=True, verbose_name='Question Text (Uzbek Cyrillic)')),
                ('text_ru', models.TextField(blank=True, verbose_name='Question Text (Russian)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions/images/', verbose_name='Image')),
                ('video', models.FileField(blank=True, null=True, upload_to='questions/videos/', verbose_name='Video')),
                ('points', models.PositiveIntegerField(default=1, verbose_name='Points')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['survey', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('time_limit_minutes', models.PositiveIntegerField(default=60, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(240)], verbose_name='Time Limit (minutes)')),
                ('questions_count', models.PositiveIntegerField(default=30, help_text='Number of random questions to show from the pool', verbose_name='Questions Count')),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Minimum score percentage to pass', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Passing Score')),
                ('max_attempts', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Max Attempts')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Surveys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_uz', models.CharField(max_length=500, verbose_name='Choice Text (Uzbek Latin)')),
                ('text_uz_cyrl', models.CharField(blank=True, max_length=500, verbose_name='Choice Text (Uzbek Cyrillic)')),
                ('text_ru', models.CharField(blank=True, max_length=500, verbose_name='Choice Text (Russian)')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Is Correct')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='surveys.question')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
                'ordering': ['question', 'order'],
                'unique_together': {('question', 'order')},
            },
        ),
        migrations.CreateModel(
            name='SessionQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='Order')),
                ('is_answered', models.BooleanField(default=False, verbose_name='Is Answered')),
                ('points_earned', models.PositiveIntegerField(default=0, verbose_name='Points Earned')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.question')),
            ],
            options={
                'verbose_name': 'Session Question',
                'verbose_name_plural': 'Session Questions',
                'ordering': ['session', 'order'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.survey'),
        ),
        migrations.CreateModel(
            name='SurveySession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('started', 'Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='started', max_length=15, verbose_name='Status')),
                ('attempt_number', models.PositiveIntegerField(default=1, verbose_name='Attempt Number')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Score')),
                ('total_points', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total Points')),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentage')),
                ('is_passed', models.BooleanField(blank=True, null=True, verbose_name='Is Passed')),
                ('language', models.CharField(default='uz', max_length=10, verbose_name='Language')),
                ('can_retake', models.BooleanField(default=False, verbose_name='Can Retake')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_sessions', to=settings.AUTH_USER_MODEL)),
                ('session_questions', models.ManyToManyField(through='surveys.SessionQuestion', to='surveys.question')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='surveys.survey')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey Session',
                'verbose_name_plural': 'Survey Sessions',
                'ordering': ['-started_at'],
                'unique_together': {('user', 'survey', 'attempt_number')},
            },
        ),
        migrations.AddField(
            model_name='sessionquestion',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.surveysession'),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('survey', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='sessionquestion',
            unique_together={('session', 'order')},
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, verbose_name='Text Answer')),
                ('is_correct', models.BooleanField(blank=True, null=True, verbose_name='Is Correct')),
                ('points_earned', models.PositiveIntegerField(default=0, verbose_name='Points Earned')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Answered At')),
                ('selected_choices', models.ManyToManyField(blank=True, to='surveys.choice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveys.question')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.surveysession')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'unique_together': {('session', 'question')},
            },
        ),
        migrations.CreateModel(
            name='UserSurveyHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_attempts', models.PositiveIntegerField(default=0, verbose_name='Total Attempts')),
                ('best_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Best Score')),
                ('best_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Best Percentage')),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Attempt')),
                ('is_passed', models.BooleanField(default=False, verbose_name='Is Passed')),
                ('current_status', models.CharField(default='not_started', max_length=15, verbose_name='Current Status')),
                ('can_continue', models.BooleanField(default=True, verbose_name='Can Continue')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_history', to='surveys.survey')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Survey History',
                'verbose_name_plural': 'User Survey Histories',
                'unique_together': {('user', 'survey')},
            },
        ),
    ]
