# Generated by Django 5.1.11 on 2025-10-23 18:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('surveys', '0009_alter_question_work_domain'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='surveysession',
            name='face_reference_image',
            field=models.ImageField(blank=True, null=True, upload_to='face_references/%Y/%m/%d/', verbose_name='Face Reference Image'),
        ),
        migrations.AddField(
            model_name='surveysession',
            name='flagged_for_review',
            field=models.BooleanField(default=False, verbose_name='Flagged for Review'),
        ),
        migrations.AddField(
            model_name='surveysession',
            name='initial_face_verified',
            field=models.BooleanField(default=False, help_text='Initial face verification completed', verbose_name='Initial Face Verified'),
        ),
        migrations.AddField(
            model_name='surveysession',
            name='proctoring_enabled',
            field=models.BooleanField(default=True, help_text='Face monitoring enabled for this session', verbose_name='Proctoring Enabled'),
        ),
        migrations.AddField(
            model_name='surveysession',
            name='violations_count',
            field=models.IntegerField(default=0, verbose_name='Violations Count'),
        ),
        migrations.CreateModel(
            name='ProctorReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('flagged', 'Flagged for Additional Review')], default='pending', max_length=20, verbose_name='Status')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Reviewed At')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('auto_flagged', models.BooleanField(default=False, verbose_name='Auto Flagged')),
                ('flag_reason', models.TextField(blank=True, verbose_name='Flag Reason')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='proctor_review', to='surveys.surveysession')),
            ],
            options={
                'verbose_name': 'Proctor Review',
                'verbose_name_plural': 'Proctor Reviews',
                'ordering': ['-session__started_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(upload_to='session_recordings/%Y/%m/%d/', verbose_name='Video File')),
                ('file_size', models.BigIntegerField(help_text='Size in bytes', verbose_name='File Size')),
                ('duration_seconds', models.IntegerField(help_text='Duration in seconds', verbose_name='Duration')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('processed', models.BooleanField(default=False, verbose_name='Processed')),
                ('total_violations', models.IntegerField(default=0, verbose_name='Total Violations')),
                ('violation_summary', models.JSONField(blank=True, default=dict, verbose_name='Violation Summary')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recording', to='surveys.surveysession')),
            ],
            options={
                'verbose_name': 'Session Recording',
                'verbose_name_plural': 'Session Recordings',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='FaceVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('face_detected', models.BooleanField(default=False, verbose_name='Face Detected')),
                ('face_count', models.IntegerField(default=0, help_text='Number of detected faces', verbose_name='Face Count')),
                ('confidence_score', models.FloatField(blank=True, help_text='Detection confidence 0-1', null=True, verbose_name='Confidence Score')),
                ('looking_at_screen', models.BooleanField(default=True, help_text='Gaze direction check', verbose_name='Looking at Screen')),
                ('mobile_device_detected', models.BooleanField(default=False, help_text='Mobile phone in frame', verbose_name='Mobile Device Detected')),
                ('snapshot', models.ImageField(blank=True, null=True, upload_to='face_verifications/%Y/%m/%d/', verbose_name='Snapshot')),
                ('is_violation', models.BooleanField(default=False, verbose_name='Is Violation')),
                ('violation_type', models.CharField(blank=True, help_text="e.g., 'no_face', 'multiple_faces', 'mobile_detected'", max_length=50, verbose_name='Violation Type')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='face_verifications', to='surveys.surveysession')),
            ],
            options={
                'verbose_name': 'Face Verification',
                'verbose_name_plural': 'Face Verifications',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['session', '-timestamp'], name='surveys_fac_session_82e55d_idx')],
            },
        ),
    ]
